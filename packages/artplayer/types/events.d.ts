import { Selector } from './component';
import { AspectRatio, Flip, PlaybackRate } from './player';

export type Events = {
  'video:canplay': [event: Event];
  'video:canplaythrough': [event: Event];
  'video:complete': [event: Event];
  'video:durationchange': [event: Event];
  'video:emptied': [event: Event];
  'video:ended': [event: Event];
  'video:loadeddata': [event: Event];
  'video:loadedmetadata': [event: Event];
  'video:pause': [event: Event];
  'video:play': [event: Event];
  'video:playing': [event: Event];
  'video:progress': [event: Event];
  'video:ratechange': [event: Event];
  'video:seeked': [event: Event];
  'video:seeking': [event: Event];
  'video:stalled': [event: Event];
  'video:suspend': [event: Event];
  'video:timeupdate': [event: Event];
  'video:volumechange': [event: Event];
  'video:waiting': [event: Event];
  destroy: [];
  customType: [typeName: string];
  url: [url: string];
  focus: [];
  blur: [];
  dblclick: [];
  click: [];
  setBar: [type: 'loaded' | 'played', percentage: number];
  hover: [state: boolean];
  mousemove: [event: Event];
  resize: [];
  view: [state: boolean];
  aspectRatio: [aspectRatio: AspectRatio];
  autoHeight: [height: number];
  autoSize: [];
  ready: [];
  error: [error: Error, reconnectTime: number];
  flip: [flip: Flip];
  fullscreen: [state: boolean];
  fullscreenWeb: [state: boolean];
  loop: [interval: [start: number, end: number]];
  mini: [state: boolean];
  pause: [];
  pip: [state: boolean];
  playbackRate: [playbackRate: PlaybackRate];
  play: [];
  seek: [currentTime: number];
  switch: [url: string];
  restart: [];
  volume: [volume: number];
  lock: [state: boolean];
  selector: [selector: Selector, $item: HTMLDivElement];
};
